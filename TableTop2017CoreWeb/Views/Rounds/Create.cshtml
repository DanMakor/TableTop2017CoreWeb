@model TableTop2017CoreWeb.Models.RoundsModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>RoundsModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div hidden class="form-group">
                <label asp-for="RoundNo" class="control-label"></label>
                <input asp-for="RoundNo" class="form-control" />
                <span asp-validation-for="RoundNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NoTableTops" class="control-label"></label>
                <input asp-for="NoTableTops" class="form-control" />
                <span asp-validation-for="NoTableTops" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div class="col-md-3">
    <h4 class="text-primary">Click to Add new Players</h4>
    @Html.ActionLink("Add Player", "Create", "Players", null, new { @class = "btn btn-primary" })
</div>


<div class="col-md-12 mt-sm">
    <table class="table">
        <thead>
            <tr>
                @{
                    if (Model.ActivePlayers.Count > 0)
                    {
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().BattleScore)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().SportsmanshipScore)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().Army)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().Active)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().EmailAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().Notes)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ActivePlayers.First().Paid)
                        </th>
                        <th></th>
                    }
                    else
                    {
                        <th>
                            Name
                        </th>
                        <th>
                            Battle Score
                        </th>
                        <th>
                            Sportsmanship Score
                        </th>
                        <th>
                            Army
                        </th>
                        <th>
                            Active
                        </th>
                        <th>
                            Email Address
                        </th>
                        <th>
                            Notes
                        </th>
                        <th>
                            Paid
                        </th>
                        <th></th>

                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ActivePlayers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BattleScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SportsmanshipScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Army)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Active)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Notes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Paid)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="col-md-3 mt-sm">
    @Html.ActionLink("Generate Round", "GenerateRoundMatchups", "RoundMatchups", null, new { @class = "btn btn-primary" })
</div>

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
