@model IEnumerable<TableTop2017CoreWeb.Models.RoundMatchups>

@{
    ViewData["Title"] = "Matchups";
    var OverallocatedPlayers = (List<string>)TempData["OverallocatedPlayers"];
    var UnallocatedPlayers = (List<string>)TempData["UnallocatedPlayers"];
    var DuplicatePlayers = (List<string>)TempData["DuplicatePlayers"];
    var Status = (string)TempData["Status"];
}

<h2>Admin</h2>

@{
    if (Model.Count() > 0)
    {
        var temp = Model.First();
        <h2>Round Number: @Html.DisplayFor(modelItem => temp.RoundNo)</h2>
    }
    else
    {
        <h2>Round Number: 0 </h2>

    }
}


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
           @* <th>
                @Html.DisplayNameFor(model => model.RoundNo)
            </th>
               *@
            <th>
                @Html.DisplayNameFor(model => model.PlayerOne.SportsmanshipScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerOne.BattleScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerOne.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Table)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerOne.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerTwo.BattleScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlayerTwo.SportsmanshipScore)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*
                <td>
                    @Html.DisplayFor(modelItem => item.RoundNo)
                </td>
                    *@
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerOne.SportsmanshipScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerOne.BattleScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerOne.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Table)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerTwo.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerTwo.BattleScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerTwo.SportsmanshipScore)
                </td>
                <td>
                    <a asp-action="AdminEdit" asp-route-id="@item.Id">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.ActionLink("Confirm Matchups", "", "RoundMatchups", null, new { @class = "btn btn-primary" })
@Html.ActionLink("Validate Matchups", "ValidateMatchups", "RoundMatchups", null, new { @class = "btn btn-primary" })
@Html.ActionLink("Reset Matchups", "ResetMatchups", "RoundMatchups", null, new { @class = "btn btn-primary" })

<div class="mt-xs">
    @if (Status != "")
    {
        <p class="alert-success">@Status</p>
    }
    @if (OverallocatedPlayers != null && OverallocatedPlayers.Count != 0)
    {
        <p class="alert-danger">
            <span>
                @foreach (string player in OverallocatedPlayers)
                {@player <span>, </span>}
            </span> has been allocated more than one opponent
        </p>
    }
    @if (UnallocatedPlayers != null && UnallocatedPlayers.Count != 0)
    {
        <p class="alert-danger">
            <span>
                @foreach (string player in UnallocatedPlayers)
                {@player <span>, </span>}
            </span> has not been allocated an opponent
        </p>
    }
    @if (DuplicatePlayers != null && DuplicatePlayers.Count != 0)
    {
        <p class="alert-danger">
            <span>
                @foreach (string player in DuplicatePlayers)
                {@player <span>, </span>}
            </span> has been matched against themselves
        </p>
    }
</div>
